# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
require 'etcd'

# ---- original file header ----
#
# @summary
#   Lashup.
#
Puppet::Functions.create_function(:'etcd_set') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    key = args[0]
    value = args[1]
    host = args[2]

    raise ArgumentError, ("etcd_set(): wrong number of arguments (#{args.length}; must be <= 3)") if args.length > 3

    client = Etcd.client(host: host)
    raise Puppet::ParseError, "Couldn't connect to '#{host}' during etcd_set()" if !client

    result = client.set("/config/puppet/#{key}", value)

    result or raise Puppet::ParseError, "Couldn't set '#{key}' to '#{value}' during etcd_set()"
  
  end
end
