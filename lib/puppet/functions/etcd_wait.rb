# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
require 'etcd'

# ---- original file header ----
#
# @summary
#   Lashup.
#
Puppet::Functions.create_function(:'etcd_wait') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    key = args[0]
    default = args[1]
    ehost = args[2]

    raise ArgumentError, ("etcd_wait(): wrong number of arguments (#{args.length}; must be <= 3)") if args.length > 3

    result = nil  
    client = Etcd.client(host: ehost)
    avalue = Array.new

    raise Puppet::ParseError, "Can't connect to etcd server #{ehost}" if !client

    edata = client.watch("/config/puppet/#{key}")

    if edata.node.dir
      edata.node.nodes.each do |node|
        avalue << node['value']
      end
      result = avalue
    else
      result = edata.node.value
    end

    result || default or raise Puppet::ParseError, "No match found for '#{key}' during etcd_wait()"
  
  end
end
